run-name: Build a debian livecd

on:
  workflow_call:
    inputs:
      commitish:
        description: "Manually override which commmit/branch the build should be based on. Passthrough from action-gh-release: 'Commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Defaults to repository default branch.'"
        type: string
        required: false

  workflow_dispatch:
    # TODO: Once input duplication is not needed anymore, refactor the input duplicate code.
    # See https://github.com/orgs/community/discussions/39357
    inputs:
      commitish:
        description: "Manually override which commmit/branch the build should be based on. Passthrough from action-gh-release: 'Commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Defaults to repository default branch.'"
        type: string
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # Frees available build disk space by removing unnecessary components
      # Hacky workaround can break at any time dependent on Github's current VM runner configuration
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v2
        with:
          remove-android: 'true'
          remove-dotnet: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commitish }}

      - name: Generate Debian Image
        uses: cnshing/build-linux-factory@v1 
        id: generate-image

      - name: Assign Artifact filename
        env: 
          image-path: $GITHUB_WORKSPACE/.build/lb/live-image-amd64.hybrid.iso 
        run: |
          # Get short git hash from
          # https://stackoverflow.com/questions/58886293/getting-current-branch-and-commit-hash-in-github-action
          git_hash=$(git rev-parse --short HEAD)
          filename=$(basename "${{ env.image-path }}")
          artifact_name=debian-${git_hash}-${filename}
          cd "$(dirname '${{ env.image-path }}')"
          #Move will require sudo permissions
          sudo mv -v "$filename" "$artifact_name"
          echo "asset-path=$(readlink -f "${artifact_name}")" >> $GITHUB_OUTPUT
          echo "artifact-name=${artifact_name}" >> $GITHUB_ENV
        id: build-files

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-name }}
          path: ${{ steps.build-files.outputs.asset-path }}
